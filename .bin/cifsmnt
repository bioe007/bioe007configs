#!/bin/bash
#
# cifsmnt: a simple script to mount cifs shares
#
# iterates the list SHARES and mounts|umounts $MNTPATH/$SHARE[] network shares
#
# configuration is through CIFS_{UID,GID,PORT} and reads credentials from
# $CIFS_CRED set SRV,SHARES and MNTPATH as needed
#
# makes use of awenotify script to send messages to awesome window manager's
# notifications or just defaults to echo commands.
#
CMDNAME="$(basename $0)"
REPORT="$CMDNAME: "

if [ -x "$HOME/.bin/awenotify" ]; then
    mecho="$HOME/.bin/awenotify"
else
    mecho="echo"
fi


SRV='//10.1.1.16'
CIFS_UID="perry"
CIFS_GID="users"
CIFS_PORT="139"
CIFS_CRED="$HOME/.cifs.conf"
CIFS_FILE_MODE=0664
CIFS_DIR_MODE=0775


MNTOPTS="credentials=$CIFS_CRED,uid=$CIFS_UID,gid=$CIFS_GID,port=$CIFS_PORT,\
file_mode=$CIFS_FILE_MODE,dir_mode=$CIFS_DIR_MODE,nounix"
MNTPATH="$HOME/samba"
SHARES=('phargrave' 'shared')

if [ ! -r "$CIFS_CRED" ] ; then
    $mecho "$CMDNAME : failed to read $CIFS_CRED"

  exit 1
fi

if [ "$(stat -c %a $CIFS_CRED)" -ne "600" ] ; then
    $mecho "$REPORT\r\tWarning: $CIFS_CRED is not mode 600"
fi

case "$1" in

  -u )
    REPORT="$REPORT Unmounting shares\r"
    for share in ${SHARES[@]} ; do
        test ! -z "$(mount | grep -w $share)" && sudo umount "$MNTPATH/$share"\
            && REPORT="$REPORT\r\tUnmounted: $share"\
            || REPORT="$REPORT\r\tNot mounted: $share"
    done
  ;;

  * )
    REPORT="$REPORT Mounting shares\r"
    for share in ${SHARES[@]} ; do
        test -z "$(mount | grep $share)" && \
            sudo mount -t cifs $SRV/$share $MNTPATH/$share -o $MNTOPTS \
            && REPORT="$REPORT\r\tMounted: $share"\
            || REPORT="$REPORT\r\tAlready Mounted: $share"
    done
  ;;
esac

$mecho "$REPORT"

