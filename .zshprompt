# phil's zsh prompt, found at -> http://aperiodic.net/phil/prompt/prompt.txt
#
# modified locally
#
# precmd is run before the each prompt is displayed
function precmd {

local TERMWIDTH
(( TERMWIDTH = ${COLUMNS} - 1 ))


###
# Truncate the path if it's too long.

PR_FILLBAR=""
PR_PWDLEN=""

local promptsize=${#${(%):---(%n@%m:%l)---()--}}
local pwdsize=${#${(%):-%~}}

if [[ "$promptsize + $pwdsize" -gt $TERMWIDTH ]]; then
    ((PR_PWDLEN=$TERMWIDTH - $promptsize))
else
    PR_FILLBAR="\${(l.(($TERMWIDTH - ($promptsize + $pwdsize)))..${PR_HBAR}.)}"
fi


###
# Get APM info.

# if which ibam > /dev/null; then
# PR_APM_RESULT=`ibam --percentbattery`
# elif which apm > /dev/null; then
# PR_APM_RESULT=`apm`
# fi
}


setopt extended_glob
preexec () {
if [[ -n $SSH_CONNECTION ]] ; then
	PR_SSH="@$HOSTNAME:"
else
	PR_SSH=""
fi
    if [[ "$TERM" == "screen" ]] || [[ "$TERM" == "screen-256color" ]]; then
        local CMD=$PR_SSH${1[(wr)^(*=*|sudo|-*)]}
        print -n "\ek$CMD\e\\"
    fi
}


setprompt () {
    ###
    # Need this so the prompt will work.

    setopt prompt_subst


    ###
    # See if we can use colors.

    autoload colors zsh/terminfo
    if [[ "$terminfo[colors]" -ge 8 ]]; then
        colors
    fi
    for color in RED GREEN YELLOW BLUE MAGENTA CYAN WHITE; do
        eval PR_$color='%{$terminfo[bold]$fg[${(L)color}]%}'
        eval PR_LIGHT_$color='%{$fg[${(L)color}]%}'
        (( count = $count + 1 ))
    done
    PR_NO_COLOUR="%{$terminfo[sgr0]%}"


    ###
    # See if we can use extended characters to look nicer.

    typeset -A altchar
    set -A altchar ${(s..)terminfo[acsc]}
    PR_SET_CHARSET="%{$terminfo[enacs]%}"
    PR_SHIFT_IN="%{$terminfo[smacs]%}"
    PR_SHIFT_OUT="%{$terminfo[rmacs]%}"
    PR_HBAR=${altchar[q]:--}
    PR_ULCORNER=${altchar[l]:--}
    PR_LLCORNER=${altchar[m]:--}
    PR_LRCORNER=${altchar[j]:--}
    PR_URCORNER=${altchar[k]:--}
    PR_LS=${altchar[u]:--}
    PR_RS=${altchar[t]:--}
    PR_DOT=${altchar[~]:--}


    ###
    # Decide if we need to set titlebar text.

    case $TERM in
        xterm*|rxvt*)
        PR_TITLEBAR=$'%{\e]0;%(!.-=*[ROOT]*=- | .)%n@%m:%~ | ${COLUMNS}x${LINES} | %y\a%}'
        ;;
        screen*)
        PR_TITLEBAR=$'%{\e_screen \005 (\005t) | %(!.-=[ROOT]=- | .)%n@%m:%~ | ${COLUMNS}x${LINES} | %y\e\\%}'
        ;;
        *)
        PR_TITLEBAR=''
        ;;
    esac


    ###
    # Decide whether to set a screen title
    if [[ ( "$TERM" == "screen" || "$TERM" == "screen-256color" )]]; then
        if [[ -n $SSH_CONNECTION ]] ; then
	    PR_STITLE=$'%{\ek@%m:%1~\e\\%}'
        else
            PR_STITLE=$'%{\ek%2~\e\\%}'
        fi
    else
        PR_STITLE=''
    fi



    ###
    # APM detection

    # if which ibam > /dev/null; then
    # PR_APM='$PR_RED${${PR_APM_RESULT[(f)1]}[(w)-2]}%%(${${PR_APM_RESULT[(f)3]}[(w)-1]})$PR_LIGHT_BLUE:'
    # elif which apm > /dev/null; then
    # PR_APM='$PR_RED${PR_APM_RESULT[(w)5,(w)6]/\% /%%}$PR_LIGHT_BLUE:'
    # else
    # PR_APM=''
    # fi


    ###
    # Finally, the prompt.

    PROMPT='$PR_SET_CHARSET$PR_STITLE${(e)PR_TITLEBAR}\
$PR_NO_COLOUR$PR_SHIFT_IN$PR_ULCORNER$PR_HBAR$PR_LS$PR_SHIFT_OUT\
$PR_CYAN%$PR_PWDLEN<...<%~%<<\
$PR_NO_COLOUR$PR_SHIFT_IN$PR_RS$PR_HBAR${(e)PR_FILLBAR}$PR_LS$PR_SHIFT_OUT\
$PR_CYAN %(!.%SROOT%s.%n)$PR_NO_COLOUR@%m:%l $PR_NO_COLOUR\
$PR_SHIFT_IN$PR_RS$PR_HBAR$PR_URCORNER$PR_SHIFT_OUT\

$PR_SHIFT_IN$PR_LLCORNER$PR_DOT\
$PR_DOT$PR_DOT $PR_DOT\
$PR_SHIFT_OUT\
$PR_NO_COLOUR '

    RPROMPT=' $PR_NO_COLOUR$PR_SHIFT_IN$PR_LLCORNER$PR_HBAR$PR_HBAR$PR_HBAR$PR_LS$PR_SHIFT_OUT\
$PR_WHITE %D{%H:%M %a, %b %d }$PR_NO_COLOUR$PR_SHIFT_IN$PR_RS$PR_HBAR$PR_LRCORNER$PR_SHIFT_OUT$PR_NO_COLOUR'

    PS2='$PR_CYAN$PR_SHIFT_IN$PR_HBAR$PR_SHIFT_OUT\
$PR_BLUE$PR_SHIFT_IN$PR_HBAR$PR_SHIFT_OUT(\
$PR_LIGHT_GREEN%_$PR_BLUE)$PR_SHIFT_IN$PR_HBAR$PR_SHIFT_OUT\
$PR_CYAN$PR_SHIFT_IN$PR_HBAR$PR_SHIFT_OUT$PR_NO_COLOUR '
}

setprompt

